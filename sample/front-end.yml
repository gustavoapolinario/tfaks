---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  namespace: dev
  labels:
    app: front-end
spec:
  selector:
    matchLabels:
      app: front-end
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
      - name: front-end
        image: gustavoapolinario/ecommerce-lab-front-end
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        env:
        - name: NODE_ENV
          value: "production"
        - name: EXAMPLE_SECRET
          valueFrom:
            secretKeyRef:
              name: demo-kv-secret  # secretName on SecretProviderClass
              key: EXAMPLE_SECRET
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: nginx-tmp
          mountPath: /tmp/
          subPath: nginx.pid
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: nginx-tmp
        emptyDir: {}
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-kv-example"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: front-end-service
  namespace: dev
spec:
  type: NodePort
  selector:
    app: front-end
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
---
# App Gateway for containers based on Kubernetes Gateway API
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: gateway-01
  namespace: dev
  annotations:
    alb.networking.azure.io/alb-namespace: dev
    alb.networking.azure.io/alb-name: alb-example
spec:
  gatewayClassName: azure-alb-external
  listeners:
  - name: https-listener
    port: 443
    protocol: HTTPS
    allowedRoutes:
      namespaces:
        from: Same
    tls:
      mode: Terminate
      certificateRefs:
      - kind : Secret
        group: ""
        name: local-tls-cert
  - name: http-listener
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Same
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: https-route
  namespace: dev
spec:
  parentRefs:
  - name: gateway-01
    sectionName: https-listener
  rules:
  - backendRefs:
    - name: front-end-service
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: http-redirect-route
  namespace: dev
spec:
  parentRefs:
  - name: gateway-01
    sectionName: http-listener
  rules:
  - filters:
    - type: RequestRedirect
      requestRedirect:
        scheme: https
        port: 443
        statusCode: 301
    matches:
    - path:
        type: PathPrefix
        value: /
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: front-end-hpa
  namespace: dev
  labels:
    app: front-end
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: front-end
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: front-end-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: front-end
